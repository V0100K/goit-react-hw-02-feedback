{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.jsx","components/section/Section.jsx","components/statistics/Statistics.jsx","components/feedback/Feedback.jsx","App.js","index.js"],"names":["FeedbackOptions","handleInc","name","onClick","Section","title","children","Statistics","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","propsTypes","PropTypes","number","func","isRequired","Feedback","state","event","target","setState","prevState","Math","round","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAsBeA,EApBS,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACzB,OACE,qCACE,wBAAQC,KAAK,OAAOC,QAASF,EAA7B,kBAGA,wBAAQC,KAAK,UAAUC,QAASF,EAAhC,qBAGA,wBAAQC,KAAK,MAAMC,QAASF,EAA5B,qBCFSG,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,6BAAKD,IACJC,M,gBCFDC,EAAa,SAAC,GAMb,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,gCAEA,OACE,mCACE,+BACE,6BACE,uCAAUJ,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,SAEb,6BACE,mDAAsBC,IAAtB,eAOVL,EAAWM,WAAa,CACtBL,KAAMM,IAAUC,OAChBN,QAASK,IAAUC,OACnBL,IAAKI,IAAUC,OACfJ,mBAAoBG,IAAUE,KAC9BJ,gCAAiCE,IAAUE,MAC3CC,WAEaV,QCnCTW,E,4MACJC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPT,UAAY,SAACmB,GACX,IAAMlB,EAAOkB,EAAMC,OAAOnB,KAC1B,EAAKoB,UAAS,SAACC,GACb,OAAO,eACJrB,EAAOqB,EAAUrB,GAAQ,O,EAKhCS,mBAAqB,WACnB,MAA+B,EAAKQ,MACpC,OADA,EAAQX,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBE,gCAAkC,WAIhC,OAHeY,KAAKC,MACjB,EAAKN,MAAMX,KAAO,EAAKG,qBAAwB,M,4CAKpD,WACE,OACE,qCACE,cAAC,EAAD,CAASN,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBJ,UAAWyB,KAAKzB,cAGnC,cAAC,EAAD,CAASI,MAAM,aAAf,SACGqB,KAAKf,qBACJ,cAAC,EAAD,CACEH,KAAMkB,KAAKP,MAAMX,KACjBC,QAASiB,KAAKP,MAAMV,QACpBC,IAAKgB,KAAKP,MAAMT,IAChBC,mBAAoBe,KAAKf,mBACzBC,gCACEc,KAAKd,kCAIT,2D,GA/CWe,aAuDRT,IChDAU,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bb9d6d88.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\n\nconst FeedbackOptions = ({ handleInc }) => {\n  return (\n    <>\n      <button name=\"good\" onClick={handleInc}>\n        Good\n      </button>\n      <button name=\"neutral\" onClick={handleInc}>\n        Neutral\n      </button>\n      <button name=\"bad\" onClick={handleInc}>\n        Bad\n      </button>\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  handleInc: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","const Section = ({ title, children }) => {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nexport default Section;\n","import PropTypes from \"prop-types\";\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  countTotalFeedback,\n  countPositiveFeedbackPercentage,\n}) => {\n  return (\n    <>\n      <ul>\n        <li>\n          <p>Good: {good}</p>\n        </li>\n        <li>\n          <p>Neutral: {neutral}</p>\n        </li>\n        <li>\n          <p>Bad: {bad}</p>\n        </li>\n        <li>\n          <p>Total: {countTotalFeedback()}</p>\n        </li>\n        <li>\n          <p>Positive Feedback:{countPositiveFeedbackPercentage()}%</p>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nStatistics.propsTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  countTotalFeedback: PropTypes.func,\n  countPositiveFeedbackPercentage: PropTypes.func,\n}.isRequired;\n\nexport default Statistics;\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"../feedbackOptions/\";\nimport Section from \"../section/\";\nimport Statistics from \"../statistics/\";\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleInc = (event) => {\n    const name = event.target.name;\n    this.setState((prevState) => {\n      return {\n        [name]: prevState[name] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const result = Math.round(\n      (this.state.good / this.countTotalFeedback()) * 100\n    );\n    return result;\n  };\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions handleInc={this.handleInc} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              countTotalFeedback={this.countTotalFeedback}\n              countPositiveFeedbackPercentage={\n                this.countPositiveFeedbackPercentage\n              }\n            />\n          ) : (\n            <p>No feedback given</p>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default Feedback;\n","import \"./App.css\";\nimport React from \"react\";\nimport Feedback from \"./components/feedback\";\n\nconst App = () => {\n  return (\n    <>\n      <Feedback />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}